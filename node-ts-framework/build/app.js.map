{"version":3,"file":"app.js","sourceRoot":"/","sources":["app.ts"],"names":[],"mappings":";;;;;AAAA,gDAAwB;AACxB,oDAA4B;AAC5B,sDAA8B;AAC9B,4EAA4C;AAC5C,gDAAwB;AAExB;;GAEG;AACH,MAAM,GAAG,GAAG,IAAA,iBAAO,GAAE,CAAC;AAEtB;;GAEG;AACH,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AACxC,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AAC/D,GAAG,CAAC,GAAG,CAAC,IAAA,cAAI,GAAE,CAAC,CAAC;AAChB,GAAG,CAAC,GAAG,CAAC,IAAA,4BAAU,EAAC;IAClB,gBAAgB,EAAE,IAAI;CACtB,CAAC,CAAC,CAAC;AAEJ;;GAEG;AACH,MAAM,MAAM,GAAG,gBAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;AAC5E,IAAI,MAAM,CAAC,KAAK;IAAE,MAAM,MAAM,CAAC,KAAK,CAAC;AAErC;;GAEG;AACH,IAAI,IAAI,GAAQ,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AAEzC,wBAAwB;AACxB,IAAI,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE;IAC7B,OAAO,CAAC,GAAG,CAAC,gCAAgC,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;AAC5D,CAAC,CAAC,CAAC;AAEH;;GAEG;AACH,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AAEhC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","sourcesContent":["import cors from \"cors\";\nimport dotenv from 'dotenv';\nimport express from \"express\";\nimport fileUpload from 'express-fileupload';\nimport path from \"path\";\n\n/*\n *  Create express server instance.\n */\nconst app = express();\n\n/*\n * Express configuration\n */\napp.use(express.json({ limit: '5mb' }));\napp.use(express.urlencoded({ limit: '5mb', extended: false }));\napp.use(cors());\napp.use(fileUpload({\n\tcreateParentPath: true,\n}));\n\n/**\n * env variables Configuration\n */\nconst result = dotenv.config({ path: path.join(__dirname, '../', '.env') });\nif (result.error) throw result.error;\n\n/**\n * Express Server\n */\nlet PORT: any = process.env.PORT || 3000;\n\n/* HTTP Configutation */\nvar server = app.listen(PORT, function () {\n\tconsole.log('Example app listening on port ' + PORT + '!');\n});\n\n/*\n * Primary app routes.\n */\napp.use('/v1', require('./v1'));\n\nmodule.exports = server;\n"]}