{"version":3,"file":"filefunctions.js","sourceRoot":"/","sources":["v1/library/filefunctions.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,4DAAoC;AAEpC,MAAa,aAAa;IACtB;;;OAGG;IACG,cAAc,CAAC,IAAS,EAAE,MAAc,EAAE,QAAgB;;YAC5D,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;gBAAE,OAAO,KAAK,CAAC;YAElD,IAAI,CAAC;gBACD,IAAI,EAAE,GAAG,IAAI,YAAE,CAAC;oBACZ,WAAW,EAAE,EAAE;oBACf,eAAe,EAAE,EAAE;iBACtB,CAAC,CAAC;gBAEH,IAAI,eAAe,GAAG,MAAM,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM;oBAC7D,EAAE,CAAC,YAAY,CAAC;wBACZ,IAAI,MAAM,GAAG;4BACT,MAAM,EAAE,aAAa;4BACrB,GAAG,EAAE,QAAQ;4BACb,IAAI,EAAE,IAAI;4BACV,GAAG,EAAE,SAAS;yBACjB,CAAC;wBACF,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,GAAQ,EAAE,IAAS;4BAC3C,IAAI,GAAG,EAAE,CAAC;gCACN,MAAM,CAAC,GAAG,CAAC,CAAC;gCAEZ,0BAA0B;gCAE1B,OAAO,KAAK,CAAC;4BACjB,CAAC;iCAAM,CAAC;gCACJ,OAAO,CAAC,IAAI,CAAC,CAAC;4BAClB,CAAC;wBACL,CAAC,CAAC,CAAC;oBACP,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;gBAEH,OAAO,eAAe,CAAC;YAC3B,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,OAAO,KAAK,CAAC;YACjB,CAAC;QACL,CAAC;KAAA;CACJ;AA1CD,sCA0CC","sourcesContent":["import S3 from 'aws-sdk/clients/s3';\n\nexport class filefunctions {\n    /**\n     * Upload file to AWS S3 bucket\n     * @param file req.files[filename] object\n     */\n    async uploadFileToS3(file: any, folder: string, filename: string) {\n        if (!file || !Buffer.isBuffer(file)) return false;\n\n        try {\n            let s3 = new S3({\n                accessKeyId: \"\",\n                secretAccessKey: \"\",\n            });\n\n            var s3UploadPromise = await new Promise(function (resolve, reject) {\n                s3.createBucket(function () {\n                    var params = {\n                        Bucket: \"Bucket Name\",\n                        Key: filename,\n                        Body: file,\n                        ACL: \"private\"\n                    };\n                    s3.upload(params, function (err: any, data: any) {\n                        if (err) {\n                            reject(err);\n\n                            // insert error log if any\n\n                            return false;\n                        } else {\n                            resolve(data);\n                        }\n                    });\n                });\n            });\n\n            return s3UploadPromise;\n        } catch (error) {\n            console.log(error);\n            return false;\n        }\n    }\n}\n"]}