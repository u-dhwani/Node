{"version":3,"file":"connection.js","sourceRoot":"/","sources":["v1/library/connection.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,4DAAoC;AACpC,2BAAiC;AAEjC,MAAa,UAAU;IAGtB;;OAEG;IACG,aAAa;;YAClB,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;gBAC5B,IAAI,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC;gBAClC,IAAI,CAAC,MAAM;oBAAE,OAAO,KAAK,CAAC;YAC3B,CAAC;YACD,OAAO,UAAU,CAAC,UAAU,CAAC;QAC9B,CAAC;KAAA;IAED;;OAEG;IACG,OAAO;;YACZ,UAAU,CAAC,UAAU,GAAG,IAAI,SAAI,CAAC;gBAChC,gBAAgB,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY;aAC1C,CAAC,CAAC;YAEH,IAAI,CAAC;gBACJ,oHAAoH;gBACpH,IAAI,eAAe,GAAG,UAAU,GAAQ;oBACvC,OAAO,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAA,oBAAU,EAAC,GAAG,EAAE,qBAAqB,CAAC,CAAC;gBACrE,CAAC,CAAA;gBACD,kGAAkG;gBAClG,IAAI,WAAW,GAAG,UAAU,GAAQ;oBACnC,OAAO,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAA,oBAAU,EAAC,GAAG,EAAE,YAAY,CAAC,CAAC;gBAC5D,CAAC,CAAA;gBACD,UAAK,CAAC,aAAa,CAAC,UAAK,CAAC,QAAQ,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;gBAC/D,UAAK,CAAC,aAAa,CAAC,UAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;gBAEtD,IAAI,MAAM,GAAG,MAAM,UAAU,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;gBACnD,IAAI,MAAM,EAAE,CAAC;oBACZ,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;gBACpC,CAAC;gBACD,OAAO,MAAM,CAAC;YACf,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBAChB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,UAAU,CAAC,UAAU,GAAG,KAAK,CAAC;gBAC9B,OAAO,KAAK,CAAC;YACd,CAAC;QACF,CAAC;KAAA;CACD;AA7CD,gCA6CC","sourcesContent":["import dateFormat from \"dateformat\";\nimport { Pool, types } from \"pg\";\n\nexport class connection {\n\tstatic connection: any;\n\n\t/**\n\t * Create connection by Singletone method. If connection is not created, then only new connection will create.\n\t */\n\tasync getConnection() {\n\t\tif (!connection.connection) {\n\t\t\tlet result = await this.connect();\n\t\t\tif (!result) return false;\n\t\t}\n\t\treturn connection.connection;\n\t}\n\n\t/**\n\t * This function will connect DB with required DB credentials.\n\t */\n\tasync connect() {\n\t\tconnection.connection = new Pool({\n\t\t\tconnectionString: process.env.DATABASE_URL\n\t\t});\n\n\t\ttry {\n\t\t\t/* Convert \"timestamp without timezone\" into local timezone. eg. 2019-01-23T10:25:33.000Z --> 2019-01-23 15:55:33 */\n\t\t\tvar datetimeParseFn = function (val: any) {\n\t\t\t\treturn val === null ? null : dateFormat(val, 'yyyy-mm-dd HH:MM:ss');\n\t\t\t}\n\t\t\t/* Convert \"date\" into local date without timezone. eg. 2019-10-28T18:30:00.000Z --> 2019-10-29 */\n\t\t\tvar dateParseFn = function (val: any) {\n\t\t\t\treturn val === null ? null : dateFormat(val, 'yyyy-mm-dd');\n\t\t\t}\n\t\t\ttypes.setTypeParser(types.builtins.TIMESTAMP, datetimeParseFn);\n\t\t\ttypes.setTypeParser(types.builtins.DATE, dateParseFn);\n\n\t\t\tlet result = await connection.connection.connect();\n\t\t\tif (result) {\n\t\t\t\tconsole.log('Database Connected!');\n\t\t\t}\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tconnection.connection = false;\n\t\t\treturn false;\n\t\t}\n\t}\n}"]}